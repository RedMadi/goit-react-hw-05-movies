{"version":3,"file":"static/js/566.e3538f63.chunk.js","mappings":"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","sources":["API/MoviesApi.js","pages/MovieDetails.styled.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '6c1f11195924715b049a64034d3aea97';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${apiKey}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}`\n  );\n  return response.data.cast;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByKeyWord = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${apiKey}&query=${encodeURIComponent(query)}`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n  height: 40px;\n  width: 120px;\n  background-color: grey;\n  color: white;\n  border-radius: 4px;\n  border: 1px solid black;\n  font-size: 16px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  cursor: pointer;\n\n  &:hover {\n    color: black;\n    background-color: darkgrey;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 24px;\n`;\n\nexport const LinkInfo = styled(Link)`\n  color: darkgreen;\n  font-size: 20px;\n  font-weight: 500;\n  text-decoration: none;\n\n  &:hover {\n    color: black;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'API/MoviesApi';\nimport { Loader } from 'components/Loader/Loader';\nimport { Button, Container, LinkInfo } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [moviesDetail, setMoviesDetail] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getMovieDetails(movieId)\n      .then(detailMovie => {\n        setMoviesDetail(detailMovie);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (!moviesDetail) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = moviesDetail || {};\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <Button type=\"button\"> Go back</Button>\n      </Link>\n      {loading && <Loader />}\n\n      {moviesDetail && (\n        <Container>\n          <img\n            width=\"300px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </Container>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <LinkInfo to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\n              Cast\n            </LinkInfo>\n          </li>\n          <li>\n            <LinkInfo\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </LinkInfo>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","apiKey","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","getMovieDetails","_ref2","_callee2","movieId","_context2","_x","getMovieCredits","_ref3","_callee3","_context3","cast","_x2","getMovieReviews","_ref4","_callee4","_context4","_x3","getMovieByKeyWord","_ref5","_callee5","query","_context5","encodeURIComponent","_x4","Button","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","LinkInfo","Link","_templateObject3","_location$state$from","_location$state","_location$state$from2","_location$state2","_location$state$from3","_location$state3","useParams","_useState","useState","_useState2","_slicedToArray","moviesDetail","setMoviesDetail","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","then","detailMovie","catch","error","console","log","finally","title","release_date","popularity","overview","genres","poster_path","original_title","_jsxs","_Fragment","children","_jsx","to","state","from","type","Loader","width","src","alt","slice","map","genre","name","id","Outlet"],"sourceRoot":""}